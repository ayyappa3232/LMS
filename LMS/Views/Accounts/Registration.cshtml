@model LMS.Models.Registrationtbl

@{
    ViewBag.Title = "Registration";
}


@* For Registration Modal *@
<div class="modal fade" id="RegisterModal" >
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a> 
                <h3 class="modal-title">New Registration</h3>
            </div>
            @if (ViewBag.Message != null)
            {
                @ViewBag.Message
            }
            <div class="modal-body margin-left:78px;">
                @using (Html.BeginForm("Registration", "Accounts", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
              
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control Date"} })
                        @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsAdmin)
                            @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.ProfilePic, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <input type="file" id="imageFile" name="imageFile" required="required" class="form-control btn btn-primary" />
                            </div>
                            <div class="col-md-4">
                                <div id="imgPreview" class="thumbnail" style="display: none;width:100px;height:auto;">
                                    <img class="img-responsive" id="targetImg" />
                                    <div class="caption">
                                        <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                        <p id="description"></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <div class="form-group">
                        <div class=" col-md-offset-4 col-md-4">
                            <input type="submit" class="form-control btn btn-primary" value="Submit" />
                            
                        </div>
                    </div>
                
            </div>
                }
            </div>
        </div>
    </div>
</div>


@* For Login Modal *@
<div class="modal fade" id="LoginModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title text-center">Login</h3>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Login","Accounts",FormMethod.Post,new { enctype="multipart/form-data"}))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @if (ViewBag.Message != null)
                        {
                            @ViewBag.Message
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="pull-right">
                <a href="#" data-toggle="modal" data-dismiss="modal" data-target="#resetPassword">Forget Password?</a>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-primary">Login</a>
                <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                <a href="#" data-toggle="modal" data-target="#RegisterModal" data-dismiss="modal" >Not yet Register? Click Here</a>
            </div>
        </div>
    </div>
</div>

@* Modal Popup for Forget Password *@

<div class="modal fade" id="resetPassword">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" data-dismiss="modal" class="close">&times;</a>
                <h3>Please Enter Your Email to Reset your password</h3>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-success">Submit</a>
                <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $(".Date").datepicker({
            changeMonth: true,
            changeYear: true,
            showOn: "both",
            buttonText : "<i class='fa fa-calendar'></i>"
            
        });

       
    });
    $("#imageFile").change(function () {
        var File = this.files;
        if (File && File[0]) {
            ReadImage(File[0])
        }
    });

      

    var ReadImage = function (file) {
        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {
            image.src = _file.target.result;
            image.onload = function () {
                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Size: " + size + ", " + height + "X " + width + "");
                $("#imgPreview").show();
            }
        }
    }

    var ClearPreview = function () {
        $("#imageFile").val('');
        $("#description").text('');
        $("#imgPreview").hide();
    }
    </script>

}
